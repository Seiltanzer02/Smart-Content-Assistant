import axios from 'axios';

// –ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
export interface SubscriptionStatus {
  has_subscription: boolean;
  is_active: boolean;
  subscription_end_date?: string | null;
}

// API_URL –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π
const API_URL = '';

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @returns Promise —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
 */
export const getUserSubscriptionStatus = async (userId: string | null): Promise<SubscriptionStatus> => {
  if (!userId) {
    console.error('%c[getUserSubscriptionStatus] üõë –û–®–ò–ë–ö–ê: –ù–µ –ø–µ—Ä–µ–¥–∞–Ω userId!', 'color:red;font-weight:bold');
    throw new Error('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
  }
  console.log(`%c[getUserSubscriptionStatus] üöÄ –ó–ê–ü–†–û–° —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è userId: ${userId}`, 'color:blue;font-weight:bold');
  
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∞–º—ã–π —Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    const timestamp = Date.now();
    const randomParam = Math.random().toString(36).substring(2, 15);
    const absolutelyNoCache = `nocache_${randomParam}_${timestamp}`;
    const url = `/subscription/status?user_id=${userId}&t=${timestamp}&nocache=${randomParam}&force=true&_=${Math.random()}&absolute_nocache=${absolutelyNoCache}`;
    
    console.log(`%c[getUserSubscriptionStatus] üì° GET ${url}`, 'color:purple;font-weight:bold');
    console.log(`%c[getUserSubscriptionStatus] ‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ${new Date().toISOString()}`, 'color:gray');
    
    // –ú–µ–≥–∞-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞–ø—Ä–æ—Å–∞ —Å –∑–∞–ø—Ä–µ—Ç–æ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    const response = await axios.get(url, {
      headers: {
        'Cache-Control': 'no-cache, no-store, must-revalidate, max-age=0',
        'Pragma': 'no-cache',
        'Expires': '0',
        'X-Requested-With': 'XMLHttpRequest',
        'X-Force-Refresh': 'true',
        'X-No-Cache': absolutelyNoCache
      },
      // –ü–æ–ª–Ω—ã–π –∑–∞–ø—Ä–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      params: {
        _: new Date().getTime(),
        force_nocache: absolutelyNoCache
      },
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –∑–∞–ø—Ä–µ—Ç–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      ...{
        cache: false,
        timeout: 30000, // 30 —Å–µ–∫ —Ç–∞–π–º–∞—É—Ç
        responseType: 'json',
        withCredentials: false
      }
    });
    
    console.log(`%c[getUserSubscriptionStatus] ‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ [${response.status}]:`, 'color:green;font-weight:bold');
    console.log(`%c[getUserSubscriptionStatus] üì¶ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:`, 'color:green');
    console.log(response.data);
    
    // –°–£–ü–ï–†-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (response.data) {
      const responseData = response.data;
      console.log(`%c[getUserSubscriptionStatus] üî¨ –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –û–¢–í–ï–¢–ê:`, 'color:blue;background-color:#f0f8ff;padding:3px;border-radius:3px;font-weight:bold');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
      console.log(`%c‚Ä¢ has_subscription:`, 'color:blue', responseData.has_subscription, `(${typeof responseData.has_subscription})`);
      console.log(`%c‚Ä¢ is_active:`, 'color:blue', responseData.is_active, `(${typeof responseData.is_active})`);
      console.log(`%c‚Ä¢ subscription_end_date:`, 'color:blue', responseData.subscription_end_date, 
        responseData.subscription_end_date ? `(${typeof responseData.subscription_end_date})` : '(null)');
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ 'true'/'false' –≤–º–µ—Å—Ç–æ boolean
      if (typeof responseData.has_subscription === 'string') {
        console.warn(`%c‚ö†Ô∏è has_subscription –ø—Ä–∏—à–µ–ª –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, –Ω–µ –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ!`, 'color:orange;font-weight:bold');
      }
      
      if (typeof responseData.is_active === 'string') {
        console.warn(`%c‚ö†Ô∏è is_active –ø—Ä–∏—à–µ–ª –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, –Ω–µ –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ!`, 'color:orange;font-weight:bold');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ª–æ–≥–∏—Ä—É–µ–º debug-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –æ—Å–æ–±—ã–º –≤–Ω–∏–º–∞–Ω–∏–µ–º
    if (response.data.debug) {
      console.log(`%c[getUserSubscriptionStatus] üîç DEBUG-–ò–ù–§–û–†–ú–ê–¶–ò–Ø:`, 'color:orange;font-weight:bold;background-color:#fff3e0;padding:3px;border-radius:3px;');
      
      const debug = response.data.debug;
      // –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –≤–∞–∂–Ω—ã–º –ø–æ–ª—è–º –≤ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
      if (debug.direct_subscription) {
        console.log(`%cüìä –ü–û–î–ü–ò–°–ö–ê –ò–ó –ü–†–Ø–ú–û–ì–û SQL:`, 'color:darkgreen;font-weight:bold');
        console.log(debug.direct_subscription);
        
        // –ü—Ä—è–º–æ–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
        console.log(`%c‚Ä¢ ID –ø–æ–¥–ø–∏—Å–∫–∏:`, 'color:green', debug.direct_subscription_id);
        console.log(`%c‚Ä¢ is_active –∏–∑ –ë–î:`, 'color:green', debug.direct_is_active, `(${typeof debug.direct_is_active})`);
        console.log(`%c‚Ä¢ end_date –∏–∑ –ë–î:`, 'color:green', debug.direct_end_date);
        console.log(`%c‚Ä¢ –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å end_date:`, 'color:green', debug.end_date_valid);
        
        if (debug.date_comparison) {
          console.log(`%c‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç:`, 'color:green', debug.date_comparison);
        }
        
        // –ï—Å–ª–∏ –±—ã–ª–æ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
        if (debug.update_sql) {
          console.log(`%c‚úÖ –í–´–ü–û–õ–ù–ï–ù–û –ê–í–¢–û–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í –ë–î:`, 'color:green;font-weight:bold');
          console.log(debug.update_sql);
          console.log(debug.update_result);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
      if (debug.direct_sql_error) {
        console.error(`%c‚ùå –û–®–ò–ë–ö–ê –ü–†–Ø–ú–û–ì–û SQL:`, 'color:red;font-weight:bold');
        console.error(debug.direct_sql_error);
      }
      
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞
      if (debug.final_has_subscription !== undefined) {
        console.log(`%cüìå –ò–¢–û–ì–û–í–û–ï –†–ï–®–ï–ù–ò–ï –ë–≠–ö–ï–ù–î–ê:`, 'color:blue;font-weight:bold');
        console.log(`‚Ä¢ has_subscription: ${debug.final_has_subscription}`);
        console.log(`‚Ä¢ is_active: ${debug.final_is_active}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ
    if (response.data.error) {
      console.error(`%c[getUserSubscriptionStatus] üõë –û—à–∏–±–∫–∞ API: ${response.data.error}`, 'color:red;font-weight:bold');
    }
    
    // –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï —Ä–µ—à–µ–Ω–∏–µ: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–æ–¥–∏–º –ø–æ–ª—è –∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–∞–º
    // –ò –ø—Ä–æ–≤–µ—Ä—è–µ–º end_date –¥–∞–∂–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
    
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è has_subscription —Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º —Ç–∏–ø–∞
    let has_subscription = false;
    if (typeof response.data.has_subscription === 'boolean') {
      has_subscription = response.data.has_subscription;
    } else if (typeof response.data.has_subscription === 'string') {
      has_subscription = response.data.has_subscription.toLowerCase() === 'true';
    } else if (typeof response.data.has_subscription === 'number') {
      has_subscription = response.data.has_subscription !== 0;
    }
    
    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—è is_active —Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º —Ç–∏–ø–∞
    let is_active = false;
    if (typeof response.data.is_active === 'boolean') {
      is_active = response.data.is_active;
    } else if (typeof response.data.is_active === 'string') {
      is_active = response.data.is_active.toLowerCase() === 'true';
    } else if (typeof response.data.is_active === 'number') {
      is_active = response.data.is_active !== 0;
    }
    
    // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ end_date –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞—Ç—ã
    const subscription_end_date = response.data.subscription_end_date || null;
    let end_date_valid = false;
    
    if (subscription_end_date) {
      try {
        const parsedEndDate = new Date(subscription_end_date);
        const now = new Date();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–∏–ª–∞—Å—å –∏ –≤ –±—É–¥—É—â–µ–º
        if (!isNaN(parsedEndDate.getTime()) && parsedEndDate > now) {
          end_date_valid = true;
          console.log(`%c[getUserSubscriptionStatus] üìÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ end_date –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ: –í–ê–õ–ò–î–ù–ê`, 'color:green');
          console.log(`–ö–æ–Ω–µ—Ü –ø–æ–¥–ø–∏—Å–∫–∏: ${parsedEndDate.toISOString()}, –°–µ–π—á–∞—Å: ${now.toISOString()}`);
        } else {
          console.log(`%c[getUserSubscriptionStatus] üìÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ end_date –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ: –ù–ï–í–ê–õ–ò–î–ù–ê`, 'color:orange');
          console.log(`–ö–æ–Ω–µ—Ü –ø–æ–¥–ø–∏—Å–∫–∏: ${parsedEndDate.toISOString()}, –°–µ–π—á–∞—Å: ${now.toISOString()}`);
        }
      } catch (e) {
        console.error(`%c[getUserSubscriptionStatus] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ end_date –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ:`, 'color:red', e);
      }
    }
    
    // –°–£–ü–ï–†-–†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: —Å—á–∏—Ç–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–Ω–æ–π, –µ—Å–ª–∏:
    // 1. –õ–∏–±–æ –ø–æ–ª–µ is_active = true 
    // 2. –õ–∏–±–æ end_date –≤–∞–ª–∏–¥–Ω–∞ –∏ –≤ –±—É–¥—É—â–µ–º
    const computed_is_active = is_active || end_date_valid;
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
    console.log(`%c[getUserSubscriptionStatus] üß† –ò–¢–û–ì–û–í–û–ï –†–ï–®–ï–ù–ò–ï –§–†–û–ù–¢–ï–ù–î–ê:`, 'color:blue;font-weight:bold;background-color:#e3f2fd;padding:3px;border-radius:3px;');
    console.log(`‚Ä¢ from is_active: ${is_active}`);
    console.log(`‚Ä¢ from end_date: ${end_date_valid}`);
    console.log(`‚Ä¢ computed_is_active: ${computed_is_active}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = { 
      has_subscription: computed_is_active, // –ü—Ä–∏–≤–æ–¥–∏–º –∫ boolean –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      is_active: computed_is_active, // –ü—Ä–∏–≤–æ–¥–∏–º –∫ boolean –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      subscription_end_date 
    };
    
    console.log(`%c[getUserSubscriptionStatus] ‚Ü©Ô∏è –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:`, 'color:blue;font-weight:bold;background-color:#bbdefb;padding:3px;border-radius:3px;');
    console.log(result);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ localStorage
    try {
      const storageData = {
        ...result,
        timestamp: Date.now(),
        raw_response: response.data
      };
      localStorage.setItem('subscription_status', JSON.stringify(storageData));
      console.log(`%c[getUserSubscriptionStatus] üíæ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage`, 'color:gray');
      
      // –û–°–û–ë–û–ï –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: –¥—É–±–ª–∏—Ä—É—é—â–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
      localStorage.setItem(`subscription_status_${userId}`, JSON.stringify(storageData));
      sessionStorage.setItem(`subscription_status_${userId}`, JSON.stringify(storageData));
    } catch (e) {
      console.warn(`%c[getUserSubscriptionStatus] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ localStorage:`, 'color:orange', e);
    }
    
    return result;
  } catch (error) {
    console.error(`%c[getUserSubscriptionStatus] üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏:`, 'color:red;font-weight:bold;background-color:#ffebee;padding:3px;border-radius:3px;');
    
    if (axios.isAxiosError(error)) {
      console.error(`%c[getUserSubscriptionStatus] üåê –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`, 'color:red');
      console.error(`–°—Ç–∞—Ç—É—Å: ${error.response?.status || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}`);
      console.error(`–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:`, error.response?.data);
      console.error(`–ó–∞–≥–æ–ª–æ–≤–∫–∏:`, error.response?.headers);
      
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∑–∞–ø—Ä–æ—Å–∞
      console.error(`%c[getUserSubscriptionStatus] üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞:`, 'color:orange');
      console.error(error.config);
    } else {
      console.error(`%c[getUserSubscriptionStatus] ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:`, 'color:red');
      console.error(error);
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–ª—é—á
      const userSpecificKey = `subscription_status_${userId}`;
      let savedStatus = localStorage.getItem(userSpecificKey) || sessionStorage.getItem(userSpecificKey);
      
      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –æ–±—â–∏–π –∫–ª—é—á
      if (!savedStatus) {
        savedStatus = localStorage.getItem('subscription_status');
      }
      
      if (savedStatus) {
        const parsed = JSON.parse(savedStatus);
        const savedTimestamp = parsed.timestamp || 0;
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞
        if (Date.now() - savedTimestamp < 3600000) {
          console.log(`%c[getUserSubscriptionStatus] üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ Storage`, 'color:orange;font-weight:bold');
          console.log(parsed);
          
          return {
            has_subscription: !!parsed.has_subscription,
            is_active: !!parsed.is_active,
            subscription_end_date: parsed.subscription_end_date
          };
        }
      }
    } catch (e) {
      console.warn(`%c[getUserSubscriptionStatus] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏–∑ Storage:`, 'color:orange', e);
    }
    
    // –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—à–µ
    throw error;
  }
};

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @param paymentId ID –ø–ª–∞—Ç–µ–∂–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns Promise —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
 */
export const createSubscription = async (userId: string | null, paymentId?: string) => {
  if (!userId) {
    console.error('[createSubscription] –ù–µ –ø–µ—Ä–µ–¥–∞–Ω userId!');
    throw new Error('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
  }
  console.log(`[createSubscription] –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è userId: ${userId}, paymentId: ${paymentId}`);
  try {
    const response = await axios.post(`${API_URL}/subscription/create`, 
      { payment_id: paymentId },
      { headers: { 'x-telegram-user-id': userId } }
    );
    console.log('[createSubscription] –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
    return response.data;
  } catch (error) {
    console.error('[createSubscription] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    throw error;
  }
};

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram
 * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @param amount –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤ Stars
 * @returns Promise —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–Ω–≤–æ–π—Å–∞, –≤–∫–ª—é—á–∞—è URL
 */
export const generateInvoice = async (userId: number, amount: number = 70) => {
  console.log(`[generateInvoice] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–æ–π—Å–∞ –¥–ª—è userId: ${userId}, amount: ${amount}`);
  try {
    const response = await axios.post(`${API_URL}/generate-invoice`, {
      user_id: userId,
      amount
    });
    console.log('[generateInvoice] –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
    return response.data;
  } catch (error) {
    console.error('[generateInvoice] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–≤–æ–π—Å–∞:', error);
    throw error;
  }
}; 